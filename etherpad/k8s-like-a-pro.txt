	1.  20 minutos: Despliega un cluster K8s, bien en local, bien en un proveedor cloud. ++++++++++++++
	1. Instala Helm: 0-1 minutos: +++++++++++++
		2. # Instalamos el binario:: curl -L  https://git.io/get_helm.sh | sudo bash +++++++++++++
		2. # Inicializamos helm: helm init ++++++++++++++
		2. # Creamos políticas RBAC para Tiller (la parte server-side del Helm): kubectl create serviceaccount --namespace kube-system tiller && kubectl create clusterrolebinding tiller-cluster-rule --clusterrole=cluster-admin --serviceaccount=kube-system:tiller && kubectl patch deploy --namespace kube-system tiller-deploy -p '{"spec":{"template":{"spec":{"serviceAccount":"tiller"}}}}' ++++++++++++
	1. Instala los siguientes aplicativos, con o sin Helm:
		2. Traefik (LB con Helm o Daemonset a pelo para cluster Vanilla): Receta de Traefik 1.7 con daemonset: https://docs.traefik.io/v1.7/user-guide/kubernetes/
			3. helm fetch stable/traefik +++++++++
			3. tar xf traefik-version.tgz +++++++++
			3. cd traefik + +++++++++
			3. vi values.yaml ++++++++++
			3. helm install -n traefik -f values.yaml stable/traefik +++++++++++
		2. Jenkins con PVC creado a manopla o sin crear PVC y que no persistamos de verdad ++
			3. Cloud: chupao 
			3. Vanilla: crea primero un StorageClass que permita provisioning (p.e. el Helm de nfs-client)
		2. Prometheus Operator: https://github.com/helm/charts/tree/master/stable/prometheus-operator
		2. Si eres demasiado rápido:
			3. Aplicación demo de "Guestbook" + "Redis":  https://kubernetes.io/docs/tutorials/stateless-application/guestbook/
			3. Despliegue demo de Wordpress+MySQL:  https://kubernetes.io/docs/tutorials/stateful-application/mysql-wordpress-persistent-volume/
			3. Desplegar nodo de Tor con Helm :-)


Jenkins Plugin : Configuration as Code


---------------------------

Modificacions al values.yaml del Traefik: ( helm upgrade nomdeldeploy stable/traefik -f values.yaml )
    


dashboard:
  enabled: true
  domain: traefik.35.240.113.185.nip.io
  serviceType: ClusterIP
  service: {}
    # annotations:
    #   key: value
  ingress:
    annotations:
      kubernetes.io/ingress.class: traefik

[...]

rbac:
  enabled: true

[...]
metrics:
  prometheus:
    enabled: true
    buckets: [0.1,0.3,1.2,5]
   # serviceMonitor:https://devops-2019-4t.pad.floss.cat/p/index
    # When set true and if Prometheus Operator is installed then use a ServiceMonitor to configure scraping
    enabled: true

--------------------------------------------------------------

kind: PersistentVolumeClaim
apiVersion: v1
metadata:
    name: jenkins-master
    namespace: default
spec:
    accessModes:
    - ReadWriteOnce
    resources:
        requests:
            storage: 5Gi

----------------------------------------------------------------------------------------------------------------







































